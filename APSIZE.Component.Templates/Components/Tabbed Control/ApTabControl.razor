

<CascadingValue Value="this">
    <div class="row">
        <div class="btn-group" role="group">
            @foreach (ApTabPage tabPage in Pages)
            {
                <button type="button"
                    class="@GetButtonClass(tabPage)"
                    @onclick=@( () => ActivatePage(tabPage) )>
                   
                    <div class="tab-button-layout">
                        @if(@tabPage.Image != "" && @tabPage.Icon == "")
                        {
                            <span><img src="@tabPage.Image" height="@tabPage.ImageHeight"
                                width="@tabPage.ImageWidth"></span>
                        }

                        @if(@tabPage.Icon != "" && @tabPage.Image == "")
                        {
                            <span class="@tabPage.Icon" aria-hidden="true"></span>
                        }
                   
                        @tabPage.Text                    
                    </div>
                </button>   
            }
        </div>   
    </div>

    <div class="tab-content">
        @ChildContent
    </div>


</CascadingValue>

@*@GetButtonClass(tabPage)*@

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    public ApTabPage ActivePage { get; set; }

    List<ApTabPage> Pages = new();

    internal void AddPage(ApTabPage tabPage)
    {
        Pages.Add(tabPage);

        if(Pages.Count == 1)
        {
            ActivePage = tabPage;
            StateHasChanged();
        }
    }

    string GetButtonClass(ApTabPage page)
    {
      return page == ActivePage ? "btn-tab-selected" : "btn-tab-notselected";
    }

    void ActivatePage(ApTabPage page)
    {
      ActivePage = page;
    }
}