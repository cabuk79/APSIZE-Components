@page "/checkbox-list"

<h2>Checkbox Square List</h2>

<p>This componet is a check box that is square that can have any text images etc. in
    the box.
    <br />
    When selected it changes and shows a border and a tick.
    <br />
    The boxes can be custmoized with the following attributes changable:
    <ul>
        <li>An image can be added and its width and height set.</li>
        <li>The border colour can be specified.</li>
        <li>The box background colour can be specified.</li>
        <li>The box container height and width can also be set.</li>
        <li>The list can be a list of string, int etc. or objects.</li>
    </ul>
    <br />
    Using the ItemTemplate tag the context can be used to set the look and content of the checkbox.  For example a list of objects with a string and image using layout can have the image and text together.
</p>

<i class="bi bi-activity"></i>

<ApTabControl>
    <ApTabPage Text="Demo - String List"     
    ImageHeight="50px" ImageWidth="50px">
        <div class="row">
            <div class="col-lg-12">
                <div class="row">
                    <div col="col-lg-12">
                        <h3>Properties</h3>
                        <p>Change the properties below to see the effect on the check boxes.</p>
                    </div>
                </div>        
                <div class="row">
                    <div class="col-lg-2">Background colour:</div>
                    <div class="col-lg-4"> <input type="text" @bind="@CheckBocBackColourString" /></div>
                </div>
                <div class="row">
                    <div class="col-lg-2">Checked border colour:</div> 
                    <div class="col-lg-4"><input type="text" @bind="@CheckBoxCheckedBorderColour" /></div>
                </div>
                <div class="row">
                    <div class="col-lg-2">Container height:</div>
                    <div class="col-lg-4"><input type="text" @bind="@CheckBoxContainerHeight" /></div>
                </div>
                <div class="row">
                    <div class="col-lg-2">Container width:</div>
                    <div class="col-lg-4"><input type="text" @bind="@CheckBoxContainerWidth" /></div>
                </div>
            </div>            
        </div>
        <div class="row">
            <ApCheckListBox Items="ItemsList" ContainerHeight="@CheckBoxContainerHeight" ContainerWidth="@CheckBoxContainerWidth" CheckBoxBackColour="@CheckBocBackColourString"
                        CheckedBorderColour="@CheckBoxCheckedBorderColour">
                <ItemTemplate>
                    @context
                </ItemTemplate>
            </ApCheckListBox>
        </div>
    </ApTabPage>
    <ApTabPage Text="Demo - List of Objects">
        <ApCheckListBox Items="People" ContainerHeight="@CheckBoxContainerHeight" ContainerWidth="@CheckBoxContainerWidth" CheckBoxBackColour="@CheckBocBackColourString"
                        CheckedBorderColour="@CheckBoxCheckedBorderColour" Context="Person">
                <ItemTemplate>
                    <img src="@Person.Image" width="150px" height="150px" />
                    <br />
                    @Person.FullName;
                </ItemTemplate>
            </ApCheckListBox>
    </ApTabPage>
    <ApTabPage Text="Usage">  
        <h3>Using List of String</h3>
        <pre>
&lt;ApCheckListBox Items=&quot;ItemsList&quot; ContainerHeight=&quot;150px&quot; ContainerWidth=&quot;150px&quot; CheckBoxBackColour=&quot;blue&quot;
    CheckedBorderColour=&quot;red&quot;&gt;
&lt;ItemTemplate&gt;
    &lt;img src=&quot;https://cdn1.vectorstock.com/i/1000x1000/31/95/user-sign-icon-person-symbol-human-avatar-vector-12693195.jpg&quot;
        width=&quot;150px&quot; height=&quot;150px&quot; /&gt;&lt;br /&gt;
    &#64;context
&lt;/ItemTemplate&gt;
&lt;/ApCheckListBox&gt;

            <code>
public List&lt;string&lt; ItemsList { get; set; } = new();

protected override async Task OnInitializedAsync()
{
    ItemsList.Add("Craig");
    ItemsList.Add("Steve");
}
            </code>
        </pre>  

        <hr />

        <h3>Using List of Objects</h3><br />
        <pre>

&lt;ApCheckListBox Items=&quot;People&quot; ContainerHeight=&quot;&#64;CheckBoxContainerHeight&quot; ContainerWidth=&quot;&#64;CheckBoxContainerWidth&quot; CheckBoxBackColour=&quot;&#64;CheckBocBackColourString&quot;
            CheckedBorderColour=&quot;&#64;CheckBoxCheckedBorderColour&quot; Context=&quot;Person&quot;&gt;
    &lt;ItemTemplate&gt;
        &lt;img src=&quot;&#64;Person.Image&quot; width=&quot;150px&quot; height=&quot;150px&quot; /&gt;
        &lt;br /&gt;
        Person.Name;
    &lt;/ItemTemplate&gt;
&lt;/ApCheckListBox&gt;

            <code>
public List&lt;Person&gt; People { get; set; } = new();

protected override async Task OnInitializedAsync()
{
    ItemsList.Add("Craig");
    ItemsList.Add("Steve");

    People.Add(new Person { Name = "Craig", Image = "https://cdn1.vectorstock.com/i/1000x1000/31/95/user-sign-icon-person-symbol-human-avatar-vector-12693195.jpg&quot" });
    People.Add(new Person { Name = "Jason", Image = "https://cdn1.vectorstock.com/i/1000x1000/31/95/user-sign-icon-person-symbol-human-avatar-vector-12693195.jpg&quot" });
}

public class Person
{
    public string Name { get; set; }
    public string Image { get; set; }
}
            </code>
        </pre>
    </ApTabPage>
    <ApTabPage Text="Properties">
        <div class="row">
            <div class="col-lg-12">
                <h3>Properties</h3>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <table class="Property-table">
                    <tr>
                        <th>Property Name</th>
                        <th>Value Type</th>
                        <th>Details</th>
                    </tr>
                    <tr>
                        <td>CheckBoxBackColour</td>
                        <td>string</td>
                        <td>This property takes a string of colour such as red or the hex code such as #ff0000</td>
                    </tr> 
                    <tr>
                        <td>CheckedBorderColour</td>
                        <td>string</td>
                        <td>This property takes a string of colour such as red or the hex code such as #ff0000</td>
                    </tr>
                    <tr>
                        <td>ContainerHeight</td>
                        <td>string</td>
                        <td>This property takes a string of size required with px at the end of the number.
                            <br />for example 150px
                        </td>
                    </tr>
                    <tr>
                        <td>ContainerWidth</td>
                        <td>string</td>
                        <td>This property takes a string of size required with px at the end of the number.
                            <br />for example 150px
                        </td>
                    </tr>
                    <tr>
                        <td>Items</td>
                        <td>List</td>
                        <td>The list can be of string, int, or objects.
                            This is what sets the items for the checkboxes.
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </ApTabPage>
    <ApTabPage Text="Source Code - Component">        
        <pre>
            <code>
                //Handles any change of each check box from checked to not checked
                void HandleChange(TItem item)
                {
                    if (SelectedItems.Contains(item))
                    {
                        SelectedItems.Remove(item);
                    }
                    else
                    {
                        SelectedItems.Add(item);
                    }

                    SelectedItemsChanged.InvokeAsync(SelectedItems);
                }
            </code>
        </pre>
    </ApTabPage>
</ApTabControl>


@code {
    public string CheckBocBackColourString { get; set; }
    public string CheckBoxCheckedBorderColour { get; set; }
    public string CheckBoxContainerHeight { get; set; } = "300px";
    public string CheckBoxContainerWidth { get; set; } = "300px";

    public List<string> ItemsList { get; set; } = new();
    public List<Person> People { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        ItemsList.Add("Craig");
        ItemsList.Add("Steve");
        ItemsList.Add("Bob");

        People.Add(new Person { FirstName = "Craig", LastName = "Brunton", Image = "https://cdn1.vectorstock.com/i/1000x1000/31/95/user-sign-icon-person-symbol-human-avatar-vector-12693195.jpg&quot" });
        People.Add(new Person { FirstName = "Jason", LastName = "Jones", Image = "https://cdn1.vectorstock.com/i/1000x1000/31/95/user-sign-icon-person-symbol-human-avatar-vector-12693195.jpg&quot" });
    }

    public class Person
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string Image { get; set; }

        public string FullName
        {
            get
            {
                return FirstName + " " + LastName;
            }
        }   
    }
}